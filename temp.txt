                {news.url && news.url !== '#' ? (
                  <a 
                    href={news.url} 
                    target="_blank" 
                    rel="noopener noreferrer"
                    className="block h-full"
                  >
                    <div className="bg-white rounded-2xl overflow-hidden shadow-lg border border-gray-100 hover:shadow-2xl transition-all duration-500 transform hover:-translate-y-3 hover:border-primary-200 h-full flex flex-col">
                      {/* Image Section with Static and External Fetching */}
                      <div className="relative h-56 overflow-hidden">
                        {loadingImages ? (
                          <div className="h-full bg-gradient-to-br from-gray-200 via-gray-300 to-gray-200 animate-pulse flex items-center justify-center">
                            <div className="text-center">
                              <FaImage className="text-gray-400 text-4xl mx-auto mb-2 animate-pulse" />
                              <div className="text-gray-500 text-sm">Se √ÆncarcƒÉ imaginea...</div>
                            </div>
                          </div>
                        ) : news.image ? (
                          <>
                            <img 
                              src={news.image} 
                              alt={news.title} 
                              className="w-full h-full object-cover transition-all duration-700 group-hover:scale-110"
                            />
                          </>
                        ) : newsImages[news.url]?.image_url ? (
                          <>
                            <img 
                              src={newsImages[news.url].image_url} 
                              alt={news.title} 
                              className="w-full h-full object-cover transition-all duration-700 group-hover:scale-110"
                              onError={(e) => {
                                e.target.style.display = 'none';
                
                                // Show fallback
                                const fallback = e.target.parentElement.parentElement.querySelector('.fallback-image');
                                if (fallback) fallback.style.display = 'flex';
                              }}
                            />
                          </>
                        ) : (
                          <div className="h-full bg-gradient-to-br from-gray-100 via-blue-50 to-blue-100 flex items-center justify-center">
                            <div className="text-center">
                              <FaImage className="text-blue-400 text-4xl mx-auto mb-2" />
                              <div className="text-blue-600 text-sm font-medium">Se √ÆncarcƒÉ imaginea...</div>
                            </div>
                          </div>
                        )}
                        
                        {/* Fallback image div */}
                        <div className="fallback-image h-full bg-gradient-to-br from-gray-100 via-blue-50 to-blue-100 hidden items-center justify-center">
                          <div className="text-center">
                            <FaImage className="text-blue-400 text-4xl mx-auto mb-2" />
                            <div className="text-blue-600 text-sm font-medium">Imagine indisponibilƒÉ</div>
                          </div>
                        </div>
                        
                        {/* Category badge */}
                        <div className="absolute top-4 right-4 bg-gradient-to-r from-primary-500 to-blue-500 text-white text-xs font-bold py-2 px-3 rounded-full shadow-lg border border-white/20 uppercase tracking-wide">
                          üåê Extern
                        </div>
                      </div>
                      
                      {/* Content Section */}
                      <div className="p-6 flex flex-col flex-grow">
                        {/* Tags and Meta Info */}
                        <div className="flex flex-wrap gap-2 mb-4">
                          <span className="px-3 py-1 bg-gradient-to-r from-primary-100 to-blue-100 text-primary-700 rounded-full text-xs font-semibold inline-flex items-center border border-primary-200">
                            <FaCalendarAlt className="mr-1" /> {news.date}
                          </span>
                          <span className="px-3 py-1 bg-gradient-to-r from-blue-100 to-purple-100 text-blue-700 rounded-full text-xs font-semibold inline-flex items-center border border-blue-200">
                            <FaTag className="mr-1" /> {news.category.charAt(0).toUpperCase() + news.category.slice(1)}
                          </span>
                          <span className="px-3 py-1 bg-gradient-to-r from-gray-100 to-gray-200 text-gray-700 rounded-full text-xs font-semibold inline-flex items-center border border-gray-200">
                            <FaClock className="mr-1" /> {news.readTime}
                          </span>
                        </div>
                        
                        {/* Title */}
                        <h3 className="text-xl font-bold mb-3 text-gray-900 group-hover:text-primary-600 transition-colors duration-300 line-clamp-2 leading-tight">
                          {news.title}
                        </h3>
                        
                        {/* Excerpt */}
                        <p className="text-gray-600 mb-6 flex-grow line-clamp-3 leading-relaxed text-sm">
                          {news.excerpt}
                        </p>
                        
                        {/* Footer with Author and CTA */}
                        <div className="flex items-center justify-between pt-4 border-t border-gray-100 mt-auto">
                          <div className="flex items-center space-x-3">
                            <div className="w-10 h-10 rounded-full bg-gradient-to-br from-primary-500 to-blue-500 flex items-center justify-center text-white font-bold text-sm shadow-lg">
                              {news.author.charAt(0)}
                            </div>
                            <div>
                              <div className="text-sm font-semibold text-gray-800">{news.author}</div>
                              <div className="text-xs text-gray-500">SursƒÉ externƒÉ</div>
                            </div>
                          </div>
                          
                          <div className="flex items-center text-primary-600 font-semibold group-hover:text-primary-700 transition-colors duration-300">
                            <span className="text-sm mr-2">Cite»ôte</span>
                            <div className="w-8 h-8 rounded-full bg-gradient-to-r from-primary-100 to-blue-100 group-hover:from-primary-200 group-hover:to-blue-200 flex items-center justify-center transition-all duration-300 shadow-md">
                              <svg className="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M14 5l7 7m0 0l-7 7m7-7H3" />
                              </svg>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                  </a>
                ) : (